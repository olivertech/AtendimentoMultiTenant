@page "/tenantdetail"
@page "/tenantdetail/{Id}"

@using AtendimentoMultiTenant.Web.Helpers
@using AtendimentoMultiTenant.Web.ManagementArea.Components.Loading
@using FluentValidation
@layout ConfigDashboardMainLayout
@inherits TenantDetailPage

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-10">
    <MudOverlay @bind-Visible="IsBusy" DarkBackground Absolute="false">
        <ChildContent>
            <Loading IsLoading="IsBusy" />
        </ChildContent>
    </MudOverlay>
    <EditForm Model="@InputModel" OnValidSubmit="OnValidSubmitAsync">
        <Morris.Blazor.Validation.Validate />
        <MudCard Class="pa-5" Elevation="4">
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h6">Detalhes do Tenant</MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                <MudGrid>
                    <MudItem xs="12" sm="12" md="12" lg="12">
                        <MudPaper Class="ps-8 pt-5 pe-8 pb-2" Elevation="4">
                            <MudStack Row="true">

                                @* Recupera os containers pra listar aqui e apontar o associado ao tenant, mantendo o controle disabled *@

                                @* <MudSelect @bind-Value="_value"
                                           Variant=""
                                           Label="@variant.ToString()"
                                           Margin="_margin"
                                           Dense="_dense"
                                           Disabled="_disabled"
                                           ReadOnly="_readonly"
                                           Placeholder="@(_placeholder ? "Placeholder" : null)"
                                           HelperText="@(_helperText ? "Helper Text" : null)"
                                           HelperTextOnFocus="_helperTextOnFocus"
                                           Clearable="_clearable">
                                    @foreach (var state in _states)
                                    {
                                        <MudSelectItem Value="state">@state</MudSelectItem>
                                    }
                                </MudSelect> *@
                            </MudStack>
                            <MudStack Row="true">
                                <MudTextField Class="mb-5" @bind-Value="InputModel.Name"
                                              Immediate="true"
                                              Label="Nome do Tenant" />
                                <MudTextField Class="mb-5" @bind-Value="InputModel.Description"
                                              Immediate="true"
                                              Label="Descrição do Tenant" />
                            </MudStack>
                            <MudStack Row="true">
                                <MudTextField Class="mb-5" @bind-Value="InputModel.InitialUrl"
                                              Label="Url Inicial" />
                                <MudTextField Class="mb-5" @bind-Value="InputModel.ConnectionString"
                                              Label="Connection String" />
                            </MudStack>
                            <MudStack Row="true">
                                <MudSwitch @bind-Value="InputModel.IsActive" Label="Ativo" Style="font-size: 8pt;" Class="mt-4 ml-5"
                                           ThumbIcon="@(InputModel.IsActive == true ? Icons.Material.Filled.Done : Icons.Material.Filled.Close)"
                                           ThumbIconColor="@(InputModel.IsActive == true ? Color.Success : Color.Error)" />
                            </MudStack>
                        </MudPaper>
                    </MudItem>
                </MudGrid>
            </MudCardContent>
            <MudCardActions Class="d-flex flex-row-reverse flex-grow-1 gap-4 me-2">
                <MudStack Justify="Justify.FlexEnd" Row="true">
                    <MudButton OnClick="GoBack" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.ArrowBack" Color="Color.Tertiary">Voltar</MudButton>
                    <MudTooltip Text="Acessar Users" Arrow="true" Placement="Placement.Bottom">
                        <MudButton OnClick="GoUsers" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Signpost" Color="Color.Warning">Users</MudButton>
                    </MudTooltip>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Save" Color="Color.Primary">Salvar</MudButton>
                </MudStack>
            </MudCardActions>
        </MudCard>
    </EditForm>

</MudContainer>

@code {
    #region Properties

    [Parameter]
    public string? Id { get; set; }

    #endregion

    #region Validators

    // FormValidatorHelper<string> ContainerDbNameValidator = new FormValidatorHelper<string>(x => x
    // .NotEmpty()
    // .Length(1, 250));

    #endregion

    #region Methods

    protected override void OnParametersSet()
    {
        if (!string.IsNullOrEmpty(Id))
        {
            TenantId = Guid.Parse(Id!);
            GetDetail();
        }
        else
        {
            InputModel.IsActive = false;
        }
    }

    protected async void GetDetail()
    {
        await GetTenant(TenantId);
    }

    #endregion
}
