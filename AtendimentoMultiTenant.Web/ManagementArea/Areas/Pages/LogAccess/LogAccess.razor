@page "/logs"
@layout ConfigDashboardMainLayout
@inherits LogAccessPage

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-10">
    <MudGrid>
        <MudItem xs="12" sm="12" md="12" lg="12">
            <MudPaper Class="pa-5">
                <MudTable T="LogAccessResponse"
                          Items="@List"
                          Dense="@dense"
                          Hover="@hover"
                          Bordered="@bordered"
                          Striped="@striped"
                          Loading="@IsBusy"
                          Filter="new Func<LogAccessResponse,bool>(DoFilter)">
                    <ToolBarContent>
                        <MudText Typo="Typo.h6">Logs de Acesso</MudText>
                        <MudSpacer />
                        <MudTextField @bind-Value="searchContentFieldValue"
                                      Placeholder="Informe o valor e tecle enter..."
                                      Label="Pesquisar"
                                      Variant="Variant.Text"
                                      Adornment="Adornment.Start"
                                      AdornmentIcon="@Icons.Material.Filled.Search"
                                      IconSize="Size.Medium"
                                      Class="mt-0"></MudTextField>
                    </ToolBarContent>
                    <HeaderContent>
                        <MudTh>User Name</MudTh>
                        <MudTh>Tenant Name</MudTh>
                        <MudTh>Data de Acesso</MudTh>
                        <MudTh>Hora de Acesso</MudTh>
                    </HeaderContent>
                    <RowTemplate>
                        <MudTd DataLabel="User Id">@context.User!.Name</MudTd>
                        <MudTd DataLabel="User Id">@context.User!.Tenant!.Name</MudTd>
                        <MudTd DataLabel="Data">@context.CreatedAt</MudTd>
                        <MudTd DataLabel="Hora">@context.TimedAt</MudTd>
                    </RowTemplate>
                    <PagerContent>
                        <MudTablePager />
                    </PagerContent>
                </MudTable>
                <div class="d-flex flex-wrap mt-4">
                    <MudSwitch @bind-Value="hover" Color="Color.Tertiary">Hover</MudSwitch>
                    <MudSwitch @bind-Value="dense" Color="Color.Tertiary">Dense</MudSwitch>
                    <MudSwitch @bind-Value="striped" Color="Color.Tertiary">Striped</MudSwitch>
                    <MudSwitch @bind-Value="bordered" Color="Color.Tertiary">Bordered</MudSwitch>
                </div>
            </MudPaper>
        </MudItem>
    </MudGrid>
</MudContainer>

@code {

    #region Grid Properties

    private bool dense = false;
    private bool hover = true;
    private bool striped = true;
    private bool bordered = true;
    private string searchContentFieldValue = "";

    #endregion
  
    #region Page Methods

    protected override async Task OnInitializedAsync()
    {
        await GetLogAccesses();
    }

    private bool DoFilter(LogAccessResponse element) => FilterContent(element, searchContentFieldValue);

    private bool FilterContent(LogAccessResponse element, string searchContent)
    {
        if (string.IsNullOrWhiteSpace(searchContent))
            return true;

        if (element.UserId.ToString().Contains(searchContent, StringComparison.OrdinalIgnoreCase))
            return true;

        if (element.CreatedAt!.ToString()!.Contains(searchContent, StringComparison.OrdinalIgnoreCase))
            return true;

        if (element.TimedAt!.ToString()!.Contains(searchContent, StringComparison.OrdinalIgnoreCase))
            return true;

        if ($"{element.UserId} {element.CreatedAt} {element.TimedAt}".Contains(searchContent))
            return true;

        return false;
    }

    #endregion
}
